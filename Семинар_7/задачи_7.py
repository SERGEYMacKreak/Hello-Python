'''''
Задача №47. Решение в группах
У вас есть код, который вы не можете менять:
transformation = <???>
values = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29] # или любой другой список
transormed_values = list(map(transformation, values))
Единственный способ вашего взаимодействия с этим кодом - посредством задания функции transformation.
Однако вы поняли, что для вашей текущей задачи вам не нужно никак преобразовывать
список значений, а нужно получить его как есть.
Напишите такое лямбда-выражение transformation, чтобы transformed_values получился копией values.
'''

# values = [1, 23, 42, 'asdfg']

# trasformation = lambda x: x

# transformed_values = list(map(trasformation, values))
# if values == transformed_values:
#  print('ok')
# else:
#  print('fail')

# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
'''''
Задача №49. 
Планеты вращаются вокруг звезд по эллиптическим орбитам. Назовем самой далекой планетой ту, орбита которой имеет
самую большую площадь. Напишите функцию find_farthest_orbit(list_of_orbits), которая среди списка орбит
планет найдет ту, по которой вращается самая далекая планета. Круговые орбиты не учитывайте: вы знаете, что у
вашей звезды таких планет нет, зато искусственные спутники были были запущены на круговые орбиты.
Результатом функции должен быть кортеж, содержащий длины полуосей эллипса орбиты самой далекой планеты.
Каждая орбита представляет из себя кортеж из пары чисел - полуосей ееэллипса.
Площадь эллипса вычисляется по формуле S = pi*a*b, где a и b - длины полуосей эллипса. 
При решении задачи используйте списочные выражения.
Подсказка: проще всего будет найти эллипс в два шага: сначала вычислить самую большую площадь эллипса,
а затем найти и сам эллипс, имеющий такую площадь. Гарантируется, что самая далекая планета ровно одна
'''

# list_of_orbits = [(1, 3), (2.5, 10), (7, 2), (6, 6), (4, 3)] 
# print(max(list_of_orbits, key=lambda x: (x[0]!=x[1])*(x[0]*x[1]*3.14)))

# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
'''''
1.Вводится список целых чисел в одну строчку через пробел. Необходимо оставить в нем только двузначные числа.
Реализовать программу с использованием функции filter. 
Результат отобразить на экране в виде последовательности оставшихся чисел в одну строчку через пробел.

пример  - 8 11 0 -23 140 1 => 11 -23
пример  -ввод: 8 11 0 -23 140 1  d 11 -23
'''
# arrey_1 = [int(x) for x in input("Введите список чисел, через пробел: ").split()]
# arrey_2 = list(filter(lambda x: 9 < x < 100 or -9 > x > -100, arrey_1))
# print(arrey_2) 

# другой вариант
# print(list(filter(lambda x: len(str(abs(int(x)))) == 2 , arrey_1))) 