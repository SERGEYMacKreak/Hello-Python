#list,set,dct - изменяемые    СРАВНЕНИЕ ЧЕРЕЗ ЗАСЕЧЕНИЯ ВРЕМЕНИ
# import time
#
# a = [i for i in range(15000000)]
# start = time.perf_counter()
# if 130000 in a:
#     print("нашел в списке")
# end = time.perf_counter()
# print(end-start)
#
# dct = {i:1 for i in range(15000000)}
# start = time.perf_counter()
# if 130000 in dct:
#     print("нашел в словаре")
# end = time.perf_counter()
# print(end-start)


# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

# Задача №17. Дан список чисел. Определите, сколько в нем встречается различных чисел.
# Input: [1, 1, 2, 0, -1, 3, 4, 4]
# Output: 6

# my_list = [1, 1, 2, 0, -1, 3, 4, 4, 3, -3, 0, 10, 11, 11]
# my_set = set(my_list) # список переводится в множества (в них нет дублирующих элементов)
# print(f"{my_set}")
# print(len(my_set)) # вывод длинны с подсчетом через функцию .len

# другой способ
# my_list = [1, 1, 2, 0, -1, 3, 4, 4, 3, -3, 0, 10, 11, 11]

# unique = []
# for i in my_list:
#     if i not in unique:
#         unique.append(i)
# print(my_list)
# print(len(unique))


# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

# Дана последовательность из N целых чисел и число K.
# Необходимо сдвинуть всю последовательность (сдвиг - циклический)
# на K элементов вправо,  K – положительное число.
#
# Input:   [1, 2, 3, 4, 5] k = 3
#
# Output:  [3, 4, 5, 1, 2]
#
# Примечание: Пользователь может вводить значения списка
# или список задан изначально.

# my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# k = 7

# new_list = []

# for i in my_list:
#     if i - k > 0:
#         new_list.append(i - k)
#     else:
#         new_list.append(i - k + len(my_list))

# print(new_list)


# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


# Задача №21. Напишите программу для печати всех уникальных значений в словаре.
# Input: [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"},
# {"VI": "S005"}, {"VII": " S005 "}, {" V ":" S009 "}, {" VIII":" S007 "}]

# Output: {'S005', 'S002', 'S007', 'S001', 'S009'}
# Примечание: Список словарей задан изначально.
# Пользователь его не вводит


# my_list =  [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"},
#         {"VI": "S005"}, {"VII": "S005"}, {"V":"S009"}, {"VIII":"S007"}]

# my_set = set() # перевод во множество
# for d in my_list:
#         for c in d.values(): # функция .values  распоковывает либо ключ (Key) либо значени (values)
#                 my_set.add(c)
# print(my_set)

# all_values = set().union(*(d.values() for d in my_list)) # запись в одну строку
# print(all_values)



# \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


# Задача №23. Дан массив, состоящий из целых чисел. Напишите программу, которая подсчитает количество
# элементов массива, больших предыдущего (элемента с предыдущим номером)
# Input: [0, -1, 5, 2, 3]
# Output: 2 (-1 < 5, 2 < 3)
# Примечание: Пользователь может вводить значения
# списка или список задан изначально.

# arr = [1, 0, -2, 2, 10, 3, -4, 5, 3, 4, 5]

# count = 0
# for i in range(1, len(arr)):
#     if arr[i] > arr[i-1]:
#         count += 1
#         print(f"{arr[i]} > {arr[i-1]}")

# print(count)