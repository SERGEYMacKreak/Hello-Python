#  –§—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞, —Ä–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏

# - –ê–Ω–æ–Ω–∏–º–Ω—ã–µ, lambda-—Ñ—É–Ω–∫—Ü–∏–∏:

# –ø—Ä–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–∏–ø —Ñ—É–Ω–∫—Ü–∏–∏
# –¢–µ–ø–µ—Ä—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —ç—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è g –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–æ—á–Ω–æ —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ f.
# g ‚Äî —ç—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é.
# def f(x) # <- —Ñ—É–Ω–∫—Ü–∏—è
#   return x ** 2
# g = f # <- –ø—Ä–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Ç–∏–ø —Ñ—É–Ω–∫—Ü–∏–∏
# print(f(4)) # 16
# print(g(4)) # 16

# –í Python –µ—Å—Ç—å –º–µ—Ö–∞–Ω–∏–∑–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –ø–æ–¥–æ–±–Ω—ã–π –≤—ã–∑–æ–≤ –≤–æ —á—Ç–æ-—Ç–æ
# –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤–æ–µ ‚Äî "lambda".
# def sum(x, y): # <- —Ñ—É–Ω–∫—Ü–∏—è     ‚áî         sum = lambda x, y: x + y   # <- –∑–∞–ø–∏—Å—å —ç—Ç–æ–π –∂–µ —Ñ—É–Ω–∫—Ü–∏—è —á–µ—Ä–µ–∑ "lambda", 
#   return x + y              (—Ä–∞–≤–Ω–æ—Å–∏–ª—å–Ω–æ)                                   –≥–¥–µ : —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Å–ª–µ–≤–æ –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ,
#                                                                              –∞ —Å–ø—Ä–∞–≤–æ —Ç–æ —á—Ç–æ –º—ã —Å –Ω–∏–º–∏ –ø–ª–∞–Ω–∏—Ä—É–µ–º –¥–µ–ª–∞—Ç—å
# –¢–µ–ø–µ—Ä—å, —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å—É–º–º—ã, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–∑–≤–∞—Ç—å sum.
# –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —à–∞–≥ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π sum –∏ —Å—Ä–∞–∑—É –≤—ã–∑–≤–∞—Ç—å lambda:
# calc(lambda x, y: x + y, 4, 5) # 9
# print((lambda x: x)(5)) —Å—Ä–∞–∑—É –≤—ã–≤–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# –§–£–ù–ö–¶–ò–Ø map()

# üí° –§—É–Ω–∫—Ü–∏—è map() –ø—Ä–∏–º–µ–Ω—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å –Ω–æ–≤—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏.

# def f(x) # <- —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–±–æ–≤–ª—è–µ—Ç 10 –∫ —á–∏—Å–ª—É
#   return x + 10
# map(f, [1, 2, 3, 4, 5])
# map(f, [11, 12, 13, 14, 15]) 

# list_1 = [x for x in range (1,20)]
# list_1 = list(map(lambda x: x + 10, list_1 )) 
# print(list_1)

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# –§–£–ù–ö–¶–ò–Ø filter()

# üí° –§—É–Ω–∫—Ü–∏—è filter() –ø—Ä–∏–º–µ–Ω—è–µ—Ç —É–∫–∞–∑–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
# –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å —Ç–µ–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É–ª–∞ True.

# data = [x for x in range(10)]
# res = list(filter(lambda x: x % 2 == 0, data)))
# print(res) # [0, 2, 4, 6, 8]

# –ö–∞–∫ –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è filter()? –í—Å–µ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —É–∫–∞–∑–∞–Ω–∞ —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º:
# lambda x: x % 2 == 0

# –¢–æ –µ—Å—Ç—å –¥–µ–ª–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏ –¥–µ–ª–µ–Ω–∏–∏ –Ω–∞ 2 –¥–∞—é—Ç –≤ –æ—Å—Ç–∞—Ç–∫–µ 0.
# –¢–µ–º —Å–∞–º—ã–º –º—ã –∏—â–µ–º —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞. –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–≤ –Ω–∞—à–∏ –∏—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–ø–∏—Å–æ–∫, —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ list(),
# –º—ã —Å –í–∞–º–∏ –º–æ–∂–µ–º –Ω–∞–±–ª—é–¥–∞—Ç—å —Ç–∞–∫–æ–π –∫—Ä–∞—Å–∏–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç üôÇ

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# –§–£–ù–ö–¶–ò–Ø zip()

# üí° –§—É–Ω–∫—Ü–∏—è zip() –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ –Ω–∞–±–æ—Ä—É –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å –∫–æ—Ä—Ç–µ–∂–∞–º–∏ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö

# –ù–∞ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—É—á–∞–µ–º –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏—Å—Ö–æ–¥–Ω–æ–º—É –Ω–∞–±–æ—Ä—É. –ü—Ä–∏–º–µ—Ä:
# users = ['user1', 'user2', 'user3', 'user4', 'user5']
# ids = [4, 5, 9, 14, 7]
# data = list(zip(users, ids))
# print(data) # [('user1', 4), ('user2', 5), ('user3', 9), ('user4', 14), ('user5', 7)]

# –§—É–Ω–∫—Ü–∏—è zip () –ø—Ä–æ–±–µ–≥–∞–µ—Ç –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–º—É –≤—Ö–æ–¥—è—â–µ–º—É –Ω–∞–±–æ—Ä—É:
# users = ['user1', 'user2', 'user3', 'user4', 'user5']
# ids = [4, 5, 9, 14, 7]
# salary = [111, 222, 333] # —ç—Ç–æ—Ç —Å–ø–∏—Å–æ–∫ –∫–∞–∫ —Å–∞–º—ã–π –∫–æ—Ä–æ—Ç–∫–∏–π –≤—ã—Å—Ç—É–ø–∏—Ç –æ–≥—Ä–∞–Ω–∏—á–∏—Ç–µ–ª–µ–º
# data = list(zip(users, ids, salary))
# print(data) # [('user1', 4, 111), ('user2', 5, 222), ('user3', 333)]


# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# –§–£–ù–ö–¶–ò–Ø enumerate()

# üí° –§—É–Ω–∫—Ü–∏—è enumerate() –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ –∏—Ç–µ—Ä–∏—Ä—É–µ–º–æ–º—É –æ–±—ä–µ–∫—Ç—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –∏—Ç–µ—Ä–∞—Ç–æ—Ä —Å –∫–æ—Ä—Ç–µ–∂–∞–º–∏ –∏–∑ –∏–Ω–¥–µ–∫—Å–∞ –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

# –§—É–Ω–∫—Ü–∏—è enumerate() –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞—Ç—å –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö.
# users = ['user1', 'user2', 'user3']
# data = list(enumerate(users)
# print(data) # [(0, 'user1'), (1, 'user2'), (2, 'user3))]
